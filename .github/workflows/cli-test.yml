name: CLI Test

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]

jobs:
  cli-test:
    name: Run CLI E2E Test
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install dependencies
        run: npm install
      
      - name: Build package
        run: npm run build
      
      - name: Run CLI extraction (basic)
        run: npx . "https://assets-test.empirical.run/test-data/settings-Settings-Page-syn-2515f-nfig-and-verify-persistence-chromium-video.webm" --no-serve --fps 10 --duration 5
      
      - name: Verify output directory exists
        run: |
          if [ -d "$HOME/.videostil" ]; then
            echo "Output directory exists"
            ls -la "$HOME/.videostil"
          else
            echo "Output directory not found"
            exit 1
          fi
        shell: bash
      
      - name: Verify extraction results
        run: |
          WORK_DIR=$(ls -t "$HOME/.videostil" | head -1)
          BASE_DIR="$HOME/.videostil/$WORK_DIR"
          
          echo "Working directory: $BASE_DIR"
          
          # Verify frames directory exists
          if [ ! -d "$BASE_DIR/frames" ]; then
            echo "Error: frames directory not found"
            exit 1
          fi
          
          # Verify unique_frames directory exists
          if [ ! -d "$BASE_DIR/unique_frames" ]; then
            echo "Error: unique_frames directory not found"
            exit 1
          fi
          
          # Count frames (expecting 50 frames for 5s @ 10fps)
          TOTAL_FRAMES=$(ls "$BASE_DIR/frames" | wc -l | tr -d ' ')
          echo "Total frames extracted: $TOTAL_FRAMES"
          if [ "$TOTAL_FRAMES" -ne 50 ]; then
            echo "Error: Expected 50 frames, got $TOTAL_FRAMES"
            exit 1
          fi
          
          # Count unique frames (expecting exactly 8 with default threshold)
          UNIQUE_FRAMES=$(ls "$BASE_DIR/unique_frames" | wc -l | tr -d ' ')
          echo "Unique frames after deduplication: $UNIQUE_FRAMES"
          if [ "$UNIQUE_FRAMES" -ne 8 ]; then
            echo "Error: Expected exactly 8 unique frames, got $UNIQUE_FRAMES"
            exit 1
          fi
          
          # Verify analysis-result.json exists
          if [ ! -f "$BASE_DIR/analysis-result.json" ]; then
            echo "Error: analysis-result.json not found"
            exit 1
          fi
          
          # Verify frame-diff-data.json exists
          if [ ! -f "$BASE_DIR/frame-diff-data.json" ]; then
            echo "Error: frame-diff-data.json not found"
            exit 1
          fi
          
          # Verify video file exists
          if ! ls "$BASE_DIR"/video_*.webm 1> /dev/null 2>&1; then
            echo "Error: video file not found"
            exit 1
          fi
          
          echo "✓ All checks passed!"
          echo "  - Total frames: $TOTAL_FRAMES"
          echo "  - Unique frames: $UNIQUE_FRAMES"
          echo "  - Deduplication ratio: $(echo "scale=2; $UNIQUE_FRAMES * 100 / $TOTAL_FRAMES" | bc)%"
        shell: bash
      
      - name: Run CLI extraction (with startTime)
        run: npx . "https://assets-test.empirical.run/test-data/settings-Settings-Page-syn-2515f-nfig-and-verify-persistence-chromium-video.webm" --no-serve --fps 10 --start 00:05 --duration 5
      
      - name: Verify extraction with startTime
        run: |
          # Get the most recent directory (excluding the first test)
          WORK_DIR=$(ls -t "$HOME/.videostil" | head -1)
          BASE_DIR="$HOME/.videostil/$WORK_DIR"
          
          echo "Working directory: $BASE_DIR"
          
          # Count frames (expecting 50 frames for 5s @ 10fps, starting at 00:05)
          TOTAL_FRAMES=$(ls "$BASE_DIR/frames" | wc -l | tr -d ' ')
          echo "Total frames extracted: $TOTAL_FRAMES"
          if [ "$TOTAL_FRAMES" -ne 50 ]; then
            echo "Error: Expected 50 frames, got $TOTAL_FRAMES"
            exit 1
          fi
          
          # Count unique frames (expecting exactly 3 with default threshold)
          UNIQUE_FRAMES=$(ls "$BASE_DIR/unique_frames" | wc -l | tr -d ' ')
          echo "Unique frames after deduplication: $UNIQUE_FRAMES"
          if [ "$UNIQUE_FRAMES" -ne 3 ]; then
            echo "Error: Expected exactly 3 unique frames, got $UNIQUE_FRAMES"
            exit 1
          fi
          
          # Verify all required files exist
          if [ ! -f "$BASE_DIR/analysis-result.json" ] || \
             [ ! -f "$BASE_DIR/frame-diff-data.json" ] || \
             ! ls "$BASE_DIR"/video_*.webm 1> /dev/null 2>&1; then
            echo "Error: Required files not found"
            exit 1
          fi
          
          echo "✓ StartTime test checks passed!"
          echo "  - Total frames: $TOTAL_FRAMES"
          echo "  - Unique frames: $UNIQUE_FRAMES"
          echo "  - Deduplication ratio: $(echo "scale=2; $UNIQUE_FRAMES * 100 / $TOTAL_FRAMES" | bc)%"
        shell: bash
